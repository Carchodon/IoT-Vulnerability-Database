import mysql.connector
from numpy.lib.stride_tricks import broadcast_to
from database import db
from modificador import mod
import pandas as pd
import matplotlib.pyplot as plt
import numpy as np

##creamos dataframe vacio
dataframe=pd.DataFrame(columns =['id','score','description', 'part', 'vendor'])

##cargamos la tabla vulnerabilidades
modificador = mod()
dataframe = modificador.get_dataframe_not_classified('vulnerabilidades2020')

def estadisticasScore(df):
  ##Estadisticas de la variable 'score'
  veces0 = 0
  veces1 = 0
  veces2 = 0
  veces3 = 0
  veces4 = 0
  veces5 = 0
  veces6 = 0
  veces7 = 0
  veces8 = 0
  veces9 = 0
  veces10 = 0
  for i,row in df.iterrows():
      if(row.score < 1):
          veces0 += 1
      else:
          if(row.score < 2):
              veces1 += 1
          else:
              if(row.score < 3):
                  veces2 += 1
              else:
                  if(row.score < 4):
                      veces3 += 1
                  else:
                      if(row.score < 5):
                          veces4 += 1
                      else:
                          if(row.score < 6):
                              veces5 += 1
                          else:
                              if(row.score < 7):
                                  veces6 += 1
                              else:
                                  if(row.score < 8):
                                      veces7 += 1
                                  else:
                                      if(row.score < 9):
                                          veces8 += 1
                                      else:
                                          if(row.score < 10):
                                              veces9 += 1
                                          else:
                                              veces10 +=1
  ##Crear el grafico con los porcentages
  values = [veces0,veces1,veces2,veces3,veces4,veces5,veces6,veces7,veces8,veces9,veces10]
  #print(values)
  graph = plt.bar(['[0,1)','[1,2)','[2,3)','[3,4)','[4,5)','[5,6)','[6,7)','[7,8)','[8,9)','[9,10)','[10]'], values)
  plt.title = ("Distribucion del score en las vulnerabilidades de dispositivios IoT")
  plt.grid(color = '#95a5a6', linestyle='--', linewidth=1, axis='y')
  for index,value in enumerate(values):
      plt.text(index,value, str(np.round(value*100/np.sum(values),2))+'%')
  plt.show()


def estadisticasPart(df):
  ##Estadisticas de la variable 'part'
  veceso = 0
  vecesh = 0
  vecesa = 0
  for i,row in df.iterrows():
      if(row.part == "o"):
          veceso += 1
      if(row.part == "h"):
          vecesh += 1
      if(row.part == "a"):
          vecesa += 1    

  ##Crear el grafico con los porcentages
  values = [vecesh,vecesa,veceso]
  print(values)
  graph = plt.bar(['h','a','o'], values)
  plt.title = ("Distribucion de la variable part en las vulnerabilidades de dispositivios IoT")
  plt.grid(color = '#95a5a6', linestyle='--', linewidth=1, axis='y')
  for index,value in enumerate(values):
      plt.text(index,value, str(np.round(value*100/np.sum(values),2))+'%')
  plt.show()



def estadisticasVendedor(df):
  ##Estadisticas de la variable vendor
  recuento = df['vendor'].value_counts()
  vendedores = recuento.index.to_list()
  values = recuento.to_list()
  ##Crear el grafico con los porcentages
  print("Lista de vendedores: " + str(vendedores) + "\n\n")
  print("Lista de valores: "+str(values))
  graph = plt.bar(vendedores, values)
  plt.title = ("Distribucion de los vendedores en las vulnerabilidades de dispositivios IoT")
  plt.tick_params(
                bottom=False,
                labelbottom=False
  )
  plt.grid(color = '#95a5a6', linestyle='--', linewidth=1, axis='y')
  plt.xticks(size = 2)
  plt.show()





##Aqui ejecutamos la funciÃ³n que queramos##
estadisticasScore(dataframe)
